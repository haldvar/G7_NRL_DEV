@using System.Text.Json
@model NRL_PROJECT.Models.MapData

@{
    ViewData["Title"] = "Map Confirmation";
    Layout = "_Layout";

    string jsCoords = "[]"; // Leaflet [lng, lat]
    string displayLat = "";
    string displayLng = "";

    if (!string.IsNullOrEmpty(Model.GeoJsonCoordinates))
    {
        try
        {
            var arr = JsonSerializer.Deserialize<double[]>(Model.GeoJsonCoordinates);
            if (arr?.Length >= 2)
            {
                jsCoords = JsonSerializer.Serialize(arr);   // [lng, lat] for Leaflet
                displayLng = arr[0].ToString();            // GeoJSON: lng
                displayLat = arr[1].ToString();            // GeoJSON: lat
            }
        }
        catch { }
    }
}
<div class="max-w-3xl mx-auto px-4 py-10">
    <h1 class="text-3xl font-bold text-purple-700 text-center mb-6">Map Confirmation</h1>

    <p class="text-gray-700 text-center mb-4">
        Your submitted coordinates have been received and visualized below:
    </p>

    <div id="mapConfirm" style="height: 400px;" class="rounded shadow mb-6"></div>

    <h2 class="text-lg font-semibold text-purple-700 mb-2">Raw Coordinates</h2>
    <div class="bg-gray-100 p-4 rounded text-sm text-gray-800 space-y-1">
        @if (!string.IsNullOrEmpty(displayLat) && !string.IsNullOrEmpty(displayLng))
        {
            <div><strong>Latitude (Breddegrad):</strong> @displayLat</div>
            <div><strong>Longitude (Lengdegrad):</strong> @displayLng</div>
        }
        else
        {
            <pre>@Model.GeoJsonCoordinates</pre>
        }
    </div>
</div>

@section Scripts {
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>

    <script>
        const coords = @Html.Raw(jsCoords); // [lng, lat]

        // Sett startposisjon hvis koordinater finnes, ellers default
        const startLat = coords.length === 2 ? coords[1] : 58.333;
        const startLng = coords.length === 2 ? coords[0] : 8.233;

        const map = L.map('mapConfirm').setView([startLat, startLng], 13);

        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            maxZoom: 19,
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OSM</a>'
        }).addTo(map);

        if (coords.length === 2) {
            const geojson = { type: "Feature", geometry: { type: "Point", coordinates: coords } };
            const layer = L.geoJSON(geojson).addTo(map);
            map.fitBounds(layer.getBounds());
        }
    </script>
}
