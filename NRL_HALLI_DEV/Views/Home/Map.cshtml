@model NRL_HALLI_DEV.Models.MapData

@{
    ViewData["Title"] = "Map";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="min-h-screen bg-gradient-to-b from-green-100 to-blue-100 flex items-center justify-center p-4">
    <!-- 80% of the viewport width -->
    <div class="bg-white shadow-xl rounded-2xl p-8 w-[80vw]  max-w-none text-center border border-gray-200">
        <!-- Logo -->
        <div class="mb-6 flex justify-start">
            <div class="w-auto h-20 rounded-lg overflow-hidden shadow-md flex place-items-start">
                <img src="~/images/logo-2.png" alt="Logo" class=" h-full w-auto object-contain" />
            </div>
        </div>

        <!-- Model content -->
        <div class="text-gray-800 mb-6">
            @Model
        </div>

        <!-- Map fills the box -->
        <!-- Map (wrapped so we can position the overlay) -->
        <div class="relative w-full">
            <div id="map" class="w-full h-[75vh] rounded-lg shadow z-0"></div>

            <!-- Overlay (top-right) -->
            <div class="pointer-events-none absolute top-3 right-3 z-50">
                <div class="pointer-events-auto rounded-xl bg-white/90 shadow-lg ring-1 ring-black/5 p-3 w-auto">
                    <div class="mb-2 flex items-center justify-between">
                        <h3 class="text-xs font-semibold text-gray-700">Markers</h3>
                        <button id="clearMarkers" type="button" class="text-xs text-blue-600 hover:underline">
                            Clear
                        </button>
                    </div>
                    <ul id="coordsList" class="max-h-40 overflow-auto text-xs font-mono text-gray-800 space-y-1">
                        <!-- Filled by JS -->
                    </ul>
                </div>
            </div>
        </div>
        <!-- Content -->
        <div class="p-6">
            <dl>
                @* @Model.Latitude *@
                
            </dl>
        </div>

            <!-- Button -->
            <a asp-action="DataForm"
               class="inline-block px-6 py-3 bg-blue-600 text-white font-semibold rounded-full shadow-md hover:bg-blue-700 transition">
                Register Obstacle
            </a>
        </div>
</div>

@section scripts {
    <script>
        // Map
        var map = L.map('map').setView([51.505, -0.09], 13);

        // Use HTTPS tiles to avoid mixed content in HTTPS sites
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            maxZoom: 19,
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(map);

        // Draw
        var drawnItems = new L.FeatureGroup();
        map.addLayer(drawnItems);

        var drawControl = new L.Control.Draw({
            draw: {
                marker: true,
                polygon: true,
                polyline: true,
                rectangle: true,
                circle: true,
                circlemarker: false
            },
            edit: { featureGroup: drawnItems }
        });
        map.addControl(drawControl);

        // Overlay elements
        const coordsListEl = document.getElementById('coordsList');
        const clearBtn = document.getElementById('clearMarkers');
        let markerCount = 0;

        function addCoord(lat, lng) {
            const li = document.createElement('li');
            li.textContent = `#${++markerCount}  Latitude: ${lat.toFixed(6)}, | Longitude: ${lng.toFixed(6)}`;
            coordsListEl.appendChild(li);
            li.scrollIntoView({ block: 'nearest' });
        }

        clearBtn.addEventListener('click', function () {
            coordsListEl.innerHTML = '';
            markerCount = 0;
            drawnItems.clearLayers();
        });

        // Handle created shapes
        map.on('draw:created', function (e) {
            var layer = e.layer;
            drawnItems.addLayer(layer);

            // If it's a marker, show its coords
            if (typeof layer.getLatLng === 'function') {
                var ll = layer.getLatLng();
                addCoord(ll.lat, ll.lng);
            }
            // If you want to also list polygon/polyline vertices, you can extend here:
            // else if (typeof layer.getLatLngs === 'function') { ... }
        });
    </script>
}